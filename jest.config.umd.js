!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("jsdom")):"function"==typeof define&&define.amd?define(["exports","jsdom"],e):e((t||self).streakCounter={},t.jsdom)}(this,function(t,e){function r(){return r=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},r.apply(this,arguments)}function n(t){return t.toLocaleDateString("en-US")}describe("streakCounter",function(){var t;beforeEach(function(){var r=new e.JSDOM("",{url:"https://localhost"});t=r.window.localStorage}),it("should return a streak object with currentCount, startDate and lastLoginDate",function(){var e=new Date,r=o(t,e);expect(r.hasOwnProperty("currentCount")).toBe(!0),expect(r.hasOwnProperty("startDate")).toBe(!0),expect(r.hasOwnProperty("lastLoginDate")).toBe(!0)}),it("should return a streak starting at 1 and keep track of lastLoginDate",function(){var e=new Date,r=o(t,e),a=n(e);expect(r.currentCount).toBe(1),expect(r.lastLoginDate).toBe(a)}),it("should store the streak in localStorage",function(){var e=new Date;o(t,e);var r=t.getItem("streak");expect(r).not.toBeNull()}),describe("with a pre-populated streak",function(){var t;beforeEach(function(){var r=new e.JSDOM("",{url:"https://localhost"});t=r.window.localStorage;var a=new Date("12/12/2021"),o={currentCount:1,startDate:n(a),lastLoginDate:n(a)};t.setItem("streak",JSON.stringify(o))}),afterEach(function(){t.clear()}),it("should return the streak from localStorage",function(){var e=new Date,r=o(t,e);expect(r.startDate).toBe("12/12/2021")}),it("should increment the streak",function(){var e=new Date("12/13/2021"),r=o(t,e);expect(r.currentCount).toBe(2)}),it("should not increment the streak when login days not consecutive",function(){var e=new Date("12/14/2021"),r=o(t,e);expect(r.currentCount).toBe(1)}),it("should save the incremented streak to localStorage",function(){var e=new Date("12/13/2021");o(t,e);var r=t.getItem("streak"),n=JSON.parse(r||"");expect(n.currentCount).toBe(2)}),it("should reset if not consecutive",function(){var e=new Date("12/13/2021"),r=o(t,e);expect(r.currentCount).toBe(2);var n=new Date("12/15/2021"),a=o(t,n);expect(a.currentCount).toBe(1)}),it("should not reset the streak for same-day login",function(){var e=new Date("12/13/2021");o(t,e);var r=new Date("12/13/2021"),n=o(t,r);expect(n.currentCount).toBe(2)}),it("should save the reset streak to localStorage",function(){var e=new Date("12/13/2021");o(t,e);var r=new Date("12/15/2021");o(t,r);var n=t.getItem("streak"),a=JSON.parse(n||"");expect(a.currentCount).toBe(1)})})});var a="streak";function o(t,e){var o,s,i=t.getItem(a);if(i)try{var c=JSON.parse(i),u=(o=c.lastLoginDate,1==(s=e.getDate()-parseInt(o.split("/")[1]))?"increment":0!==s?"reset":void 0),l="reset"===u;if("increment"===u){var f=r({},c,{currentCount:c.currentCount+1,lastLoginDate:n(e)});return t.setItem(a,JSON.stringify(f)),f}if(l){var p=r({},c,{currentCount:1,lastLoginDate:n(e)});return t.setItem(a,JSON.stringify(p)),p}return c}catch(t){console.error("Failed to parse streak from localStorage")}var h=function(t,e){return r({currentCount:1,startDate:n(t),lastLoginDate:n(t)},{})}(e);return t.setItem(a,JSON.stringify(h)),h}t.streakCounter=o});
//# sourceMappingURL=jest.config.umd.js.map
