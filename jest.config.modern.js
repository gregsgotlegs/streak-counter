import{JSDOM as t}from"jsdom";function e(){return e=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t},e.apply(this,arguments)}function n(t){return t.toLocaleDateString("en-US")}describe("streakCounter",()=>{let e;beforeEach(()=>{const n=new t("",{url:"https://localhost"});e=n.window.localStorage}),it("should return a streak object with currentCount, startDate and lastLoginDate",()=>{const t=new Date,n=r(e,t);expect(n.hasOwnProperty("currentCount")).toBe(!0),expect(n.hasOwnProperty("startDate")).toBe(!0),expect(n.hasOwnProperty("lastLoginDate")).toBe(!0)}),it("should return a streak starting at 1 and keep track of lastLoginDate",()=>{const t=new Date,o=r(e,t),a=n(t);expect(o.currentCount).toBe(1),expect(o.lastLoginDate).toBe(a)}),it("should store the streak in localStorage",()=>{const t=new Date;r(e,t);const n=e.getItem("streak");expect(n).not.toBeNull()}),describe("with a pre-populated streak",()=>{let e;beforeEach(()=>{const o=new t("",{url:"https://localhost"});e=o.window.localStorage;const r=new Date("12/12/2021"),a={currentCount:1,startDate:n(r),lastLoginDate:n(r)};e.setItem("streak",JSON.stringify(a))}),afterEach(()=>{e.clear()}),it("should return the streak from localStorage",()=>{const t=new Date,n=r(e,t);expect(n.startDate).toBe("12/12/2021")}),it("should increment the streak",()=>{const t=new Date("12/13/2021"),n=r(e,t);expect(n.currentCount).toBe(2)}),it("should not increment the streak when login days not consecutive",()=>{const t=new Date("12/14/2021"),n=r(e,t);expect(n.currentCount).toBe(1)}),it("should save the incremented streak to localStorage",()=>{const t=new Date("12/13/2021");r(e,t);const n=e.getItem("streak"),o=JSON.parse(n||"");expect(o.currentCount).toBe(2)}),it("should reset if not consecutive",()=>{const t=new Date("12/13/2021"),n=r(e,t);expect(n.currentCount).toBe(2);const o=new Date("12/15/2021"),a=r(e,o);expect(a.currentCount).toBe(1)}),it("should not reset the streak for same-day login",()=>{const t=new Date("12/13/2021");r(e,t);const n=new Date("12/13/2021"),o=r(e,n);expect(o.currentCount).toBe(2)}),it("should save the reset streak to localStorage",()=>{const t=new Date("12/13/2021");r(e,t);const n=new Date("12/15/2021");r(e,n);const o=e.getItem("streak"),a=JSON.parse(o||"");expect(a.currentCount).toBe(1)})})});const o="streak";function r(t,r){const a=t.getItem(o);if(a)try{const s=JSON.parse(a),c=function(t,e){const n=t.getDate()-parseInt(e.split("/")[1]);return 1===n?"increment":0!==n?"reset":void 0}(r,s.lastLoginDate),u="reset"===c;if("increment"===c){const a=e({},s,{currentCount:s.currentCount+1,lastLoginDate:n(r)});return t.setItem(o,JSON.stringify(a)),a}if(u){const a=e({},s,{currentCount:1,lastLoginDate:n(r)});return t.setItem(o,JSON.stringify(a)),a}return s}catch(t){console.error("Failed to parse streak from localStorage")}const s=function(t,o){return e({currentCount:1,startDate:n(t),lastLoginDate:n(t)},{})}(r);return t.setItem(o,JSON.stringify(s)),s}export{r as streakCounter};
//# sourceMappingURL=jest.config.modern.js.map
